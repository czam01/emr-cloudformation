AWSTemplateFormatVersion: '2010-09-09'
Description: Cloudformation Stack to deploy BCI BigData Enviroment
Parameters:
    awsRegion:
        Description: awsRegion
        Default: us-east-1
        Type: String
    EnvironmentName:
        Description: "A prefix for the resource names."
        Type: String
        Default: OPS-BigData
Mappings:
    EnvironmentMap:
        OPS-BigData-Emr:
            EnvironmentName: OPS-BigData
            VpcAddress: 10.4.0.0/16
            PublicSubNetAAddress: 10.4.0.0/24
            PublicSubNetBAddress: 10.4.1.0/24
            PrivateSubNetAAddress: 10.4.2.0/24
            PrivateSubNetBAddress: 10.4.3.0/24
        DEVELOPMENT-BigData-Emr:
            EnvironmentName: DEVELOPMENT-BigData
            VpcAddress: 10.5.0.0/16
            PublicSubNetAAddress: 10.5.0.0/24
            PublicSubNetBAddress: 10.5.1.0/24
            PrivateSubNetAAddress: 10.5.2.0/24
            PrivateSubNetBAddress: 10.5.3.0/24
        STAGING-BigData-Emr:
            EnvironmentName: STAGING-BigData
            VpcAddress: 10.6.0.0/16
            PublicSubNetAAddress: 10.6.0.0/24
            PublicSubNetBAddress: 10.6.1.0/24
            PrivateSubNetAAddress: 10.6.2.0/24
            PrivateSubNetBAddress: 10.6.3.0/24
        PRODUCTION-BigData-Emr:
            EnvironmentName: PRODUCTION-BigData
            VpcAddress: 10.7.0.0/16
            PublicSubNetAAddress: 10.7.0.0/24
            PublicSubNetBAddress: 10.7.1.0/24
            PrivateSubNetAAddress: 10.7.2.0/24
            PrivateSubNetBAddress: 10.7.3.0/24
Resources:
    IngestCashoutsStep:
        Type: "AWS::EMR::Step"
        DependsOn: IngestContactsStep
        Properties:
            ActionOnFailure: "CONTINUE"
            HadoopJarStep:
                Args:
                    - "spark-submit"
                    - "--py-files"
                    - "/tmp/cashouts/schema.py"
                    - "/tmp/cashouts/ingest_cashouts.py"
                    - "prd"
                    - "mach-big-data-edl"
                Jar: "command-runner.jar"
            Name: "IngestCashouts"
            JobFlowId: !Ref EMRClusterV5
    IngestPaymentsStep:
        Type: "AWS::EMR::Step"
        DependsOn: IngestCashoutsStep
        Properties:
            ActionOnFailure: "CONTINUE"
            HadoopJarStep:
                Args:
                    - "spark-submit"
                    - "/tmp/payments/ingest_payments.py"
                    - "prd"
                    - "mach-big-data-edl"
                Jar: "command-runner.jar"
            Name: "IngestPayments"
            JobFlowId: !Ref EMRClusterV5
    IngestMachCardsStep:
        Type: "AWS::EMR::Step"
        DependsOn: IngestTcomStep
        Properties:
            ActionOnFailure: "CONTINUE"
            HadoopJarStep:
                Args:
                    - "spark-submit"
                    - "--py-files"
                    - "/tmp/mach_cards/schema.py"
                    - "/tmp/mach_cards/ingest_card_receptions.py"
                    - "prd"
                    - "mach-big-data-edl"
                Jar: "command-runner.jar"
            Name: "IngestMachCards"
            JobFlowId: !Ref EMRClusterV5
    IngestReferralsStep:
        Type: "AWS::EMR::Step"
        DependsOn: IngestCashInStep
        Properties:
            ActionOnFailure: "CONTINUE"
            HadoopJarStep:
                Args:
                    - "spark-submit"
                    - "--py-files"
                    - "/tmp/mach_cards/schema.py"
                    - "--executor-memory"
                    - "10G"
                    - "/tmp/referrals/ingest_referrals.py"
                    - "prd"
                    - "mach-big-data-edl"
                Jar: "command-runner.jar"
            Name: "IngestReferrals"
            JobFlowId: !Ref EMRClusterV5
    IngestCashInStep:
        Type: "AWS::EMR::Step"
        DependsOn: IngestPaymentsStep
        Properties:
            ActionOnFailure: "CONTINUE"
            HadoopJarStep:
                Args:
                    - "spark-submit"
                    - "--py-files"
                    - "/tmp/cashins/schema.py"
                    - "/tmp/cashins/ingest_cashins.py"
                    - "prd"
                    - "mach-big-data-edl"
                Jar: "command-runner.jar"
            Name: "IngestCashIn"
            JobFlowId: !Ref EMRClusterV5
    IngestAccountsStep:
        Type: "AWS::EMR::Step"
        DependsOn:  IngestIdentitiestep
        Properties:
            ActionOnFailure: "CONTINUE"
            HadoopJarStep:
                Args:
                    - "spark-submit"
                    - "/tmp/ingest_accounts.py"
                    - "prd"
                    - "mach-big-data-edl"
                Jar: "command-runner.jar"
            Name: "IngestAccounts"
            JobFlowId: !Ref EMRClusterV5
    IngestProfilesStep:
        Type: "AWS::EMR::Step"
        DependsOn: IngestAccountsStep
        Properties:
            ActionOnFailure: "CONTINUE"
            HadoopJarStep:
                Args:
                    - "spark-submit"
                    - "/tmp/ingest_profiles.py"
                    - "prd"
                    - "mach-big-data-edl"
                Jar: "command-runner.jar"
            Name: "IngestProfiles"
            JobFlowId: !Ref EMRClusterV5
    IngestContactsStep:
        Type: "AWS::EMR::Step"
        DependsOn: IngestProfilesStep
        Properties:
            ActionOnFailure: "CONTINUE"
            HadoopJarStep:
                Args:
                    - "spark-submit"
                    - "/tmp/ingest_contacts.py"
                    - "prd"
                    - "mach-big-data-edl"
                Jar: "command-runner.jar"
            Name: "IngestContacts"
            JobFlowId: !Ref EMRClusterV5
    IngestTcomStep:
            Type: "AWS::EMR::Step"
            DependsOn: IngestReferralsStep
            Properties:
                ActionOnFailure: "CONTINUE"
                HadoopJarStep:
                    Args:
                        - "spark-submit"
                        - "/tmp/ingest_tcom.py"
                        - "prd"
                        - "mach-big-data-edl"
                        - "MPJ38260.FINT0003.0016.D20170531"
                    Jar: "command-runner.jar"
                Name: "IngestTcomStep"
                JobFlowId: !Ref EMRClusterV5
    IngestPhonestep:
            Type: "AWS::EMR::Step"
            DependsOn: CloudWatchToS3step
            Properties:
                ActionOnFailure: "CONTINUE"
                HadoopJarStep:
                    Args:
                        - "spark-submit"
                        - "/tmp/ingest_phones.py"
                        - "prd"
                        - "mach-big-data-edl"
                    Jar: "command-runner.jar"
                Name: "IngestPhones"
                JobFlowId: !Ref EMRClusterV5
    IngestIdentitiestep:
            Type: "AWS::EMR::Step"
            DependsOn: IngestPhonestep
            Properties:
                ActionOnFailure: "CONTINUE"
                HadoopJarStep:
                    Args:
                        - "spark-submit"
                        - "/tmp/ingest_identities.py"
                        - "prd"
                        - "mach-big-data-edl"
                    Jar: "command-runner.jar"
                Name: "IngestIdentities"
                JobFlowId: !Ref EMRClusterV5
    CreateUserDetailstep:
            Type: "AWS::EMR::Step"
            DependsOn: IngestMachCardsStep
            Properties:
                ActionOnFailure: "CONTINUE"
                HadoopJarStep:
                    Args:
                        - "spark-submit"
                        - "/tmp/data_warehouse/create_user_detail.py"
                        - "prd"
                    Jar: "command-runner.jar"
                Name: "CreateUserDetail"
                JobFlowId: !Ref EMRClusterV5
    CreateDateDimensionstep:
            Type: "AWS::EMR::Step"
            DependsOn: CreateUserDetailstep
            Properties:
                ActionOnFailure: "CONTINUE"
                HadoopJarStep:
                    Args:
                        - "spark-submit"
                        - "/tmp/data_warehouse/create_date_dimension.py"
                        - "prd"
                        - "2017"
                        - "3"
                    Jar: "command-runner.jar"
                Name: "CreateDateDimension"
                JobFlowId: !Ref EMRClusterV5
    CloudWatchToS3step:
            Type: "AWS::EMR::Step"
            DependsOn: EMRClusterV5
            Properties:
                ActionOnFailure: "CONTINUE"
                HadoopJarStep:
                    Args:
                        - "s3://mach-big-data-emr-batch/deploy/cloudwatch_to_s3.sh"
                        - "prd"
                    Jar: "s3://us-east-1.elasticmapreduce/libs/script-runner/script-runner.jar"
                Name: "CloudWatchToS3"
                JobFlowId: !Ref EMRClusterV5
    EMRClusterV5:
        Type: AWS::EMR::Cluster
        Properties:
            Instances:
                MasterInstanceGroup:
                    InstanceCount: 1
                    InstanceType: "r4.2xlarge"
                    Market: "ON_DEMAND"
                    Name: "prd-Emr-master-BigData"
                CoreInstanceGroup:
                    InstanceCount: 2
                    InstanceType: "r4.2xlarge"
                    Market: "ON_DEMAND"
                    Name: "prd-Emr-core-BigData-Dev"
                Ec2SubnetId:
                    Fn::ImportValue:
                        !Join ['-', ['PublicSubNetAId',!FindInMap [ EnvironmentMap, !Ref "AWS::StackName", EnvironmentName ]]]
                Ec2KeyName: Key-PRODUCTION-BigData
                EmrManagedMasterSecurityGroup:
                    Fn::ImportValue:
                        !Join ['-', ['PortsForEmrMasterNode',!FindInMap [ EnvironmentMap, !Ref "AWS::StackName", EnvironmentName ]]]
                EmrManagedSlaveSecurityGroup:
                    Fn::ImportValue:
                        !Join ['-', ['PortsForEmrCoreNode',!FindInMap [ EnvironmentMap, !Ref "AWS::StackName", EnvironmentName ]]]
            BootstrapActions:
                -
                    Name: "BootstrapEMR"
                    ScriptBootstrapAction:
                        Path: "s3://mach-big-data-emr-batch/deploy/boot.sh"
            LogUri: "s3://mach-big-data-infra-logs/emr/batch/"
            Configurations:
            - Classification: hadoop-env
              Configurations:
              - Classification: export
                ConfigurationProperties:
                  JAVA_HOME: "/usr/lib/jvm/java-1.8.0"
            - Classification: spark-env
              Configurations:
              - Classification: export
                ConfigurationProperties:
                  JAVA_HOME: "/usr/lib/jvm/java-1.8.0"
            - Classification: hadoop-log4j
              ConfigurationProperties:
                    hadoop.log.maxfilesize: 256MB
                    hadoop.log.maxbackupindex: '3'
                    hadoop.security.log.maxfilesize: 256MB
                    hadoop.security.log.maxbackupindex: '3'
                    hdfs.audit.log.maxfilesize: 256MB
                    hdfs.audit.log.maxbackupindex: '3'
                    mapred.audit.log.maxfilesize: 256MB
                    mapred.audit.log.maxbackupindex: '3'
                    hadoop.mapreduce.jobsummary.log.maxfilesize: 256MB
                    hadoop.mapreduce.jobsummary.log.maxbackupindex: '3'
            - Classification: hbase-log4j
              ConfigurationProperties:
                  hbase.log.maxbackupindex: '3'
                  hbase.log.maxfilesize: 10MB
                  hbase.security.log.maxbackupindex: '3'
                  hbase.security.log.maxfilesize: 10MB
            - Classification: yarn-site
              ConfigurationProperties:
                  yarn.log-aggregation.retain-seconds: '43200'
            Applications:
            - Name: Hadoop
            - Name: Hive
            - Name: Pig
            - Name: Spark
            Name: "Emr-cluster-BCI-BigData"
            JobFlowRole: "EMR_EC2_DefaultRole"
            ServiceRole: "EMR_DefaultRole"
            ReleaseLabel: "emr-5.4.0"
            VisibleToAllUsers: true
            Tags:
            - Key: Name
              Value:
                Fn::Join:
                - ''
                - - emr-instance-
                  - Ref: AWS::StackName
                  - ''
            - Key: Environment
            - Key: Stack ID
              Value:
                Ref: AWS::StackName
